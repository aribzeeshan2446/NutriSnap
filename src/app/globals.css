
@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  font-family: var(--font-geist-sans), Arial, Helvetica, sans-serif;
}

@layer base {
  :root { /* Light Theme */
    --background: 240 30% 96%;
    --foreground: 260 50% 15%;

    --card: 240 30% 98%;
    --card-foreground: 260 50% 15%;

    --popover: 240 30% 98%;
    --popover-foreground: 260 50% 15%;

    --primary: 265 75% 50%;
    --primary-foreground: 0 0% 100%;

    --secondary: 240 25% 92%;
    --secondary-foreground: 265 65% 30%;

    --muted: 240 20% 90%;
    --muted-foreground: 260 30% 40%;

    --accent: 285 70% 50%;
    --accent-foreground: 0 0% 100%;

    --destructive: 0 72% 51%;
    --destructive-foreground: 0 0% 98%;

    --border: 240 20% 88%;
    --input: 240 25% 95%;
    --ring: 265 85% 60%;

    --radius: 0.5rem;

    /* Chart colors */
    --chart-1: hsl(var(--primary));
    --chart-2: hsl(var(--accent));
    --chart-3: 190 60% 45%;
    --chart-4: 330 60% 55%;
    --chart-5: 45 70% 50%;

    /* Sidebar specific colors - themed */
    --sidebar-background: 240 28% 95%;
    --sidebar-foreground: hsl(var(--foreground));
    --sidebar-primary: hsl(var(--primary));
    --sidebar-primary-foreground: hsl(var(--primary-foreground));
    --sidebar-accent: hsl(var(--accent));
    --sidebar-accent-foreground: hsl(var(--accent-foreground));
    --sidebar-border: 240 20% 87%;
    --sidebar-ring: hsl(var(--ring));

    /* Animated background specific colors for Light Theme */
    --blob-color-1: hsla(var(--primary), 0.35);
    --blob-color-2: hsla(var(--accent), 0.3);
    --blob-color-3: hsla(190, 60%, 45%, 0.3);
    --particle-color: hsla(var(--foreground), 0.5);
  }

  .dark {
    --background: 220 20% 5%;
    --foreground: 220 15% 95%;

    --card: 220 20% 9%;
    --card-foreground: 220 15% 95%;

    --popover: 220 20% 4%;
    --popover-foreground: 220 15% 95%;

    --primary: 265 80% 68%;
    --primary-foreground: 265 80% 98%;

    --secondary: 220 15% 18%;
    --secondary-foreground: 220 15% 80%;

    --muted: 220 10% 12%;
    --muted-foreground: 220 10% 65%;

    --accent: 280 70% 70%;
    --accent-foreground: 280 70% 98%;

    --destructive: 0 65% 55%;
    --destructive-foreground: 0 0% 98%;

    --border: 220 15% 20%;
    --input: 220 15% 15%;
    --ring: 265 85% 72%;

    /* Chart colors */
    --chart-1: hsl(var(--primary));
    --chart-2: hsl(var(--accent));
    --chart-3: 180 70% 60%;
    --chart-4: 330 70% 70%;
    --chart-5: 45 80% 65%;

    /* Sidebar specific colors - themed */
    --sidebar-background: 220 20% 6%;
    --sidebar-foreground: hsl(var(--foreground));
    --sidebar-primary: hsl(var(--primary));
    --sidebar-primary-foreground: hsl(var(--primary-foreground));
    --sidebar-accent: hsl(var(--accent));
    --sidebar-accent-foreground: hsl(var(--accent-foreground));
    --sidebar-border: 220 15% 18%;
    --sidebar-ring: hsl(var(--ring));

    /* --- Attempt to influence third-party widgets in dark mode --- */
    --widget-bg-color: hsl(var(--card));
    --widget-text-color: hsl(var(--card-foreground));
    --widget-border-color: hsl(var(--border));
    --widget-primary-color: hsl(var(--primary));
    --widget-secondary-color: hsl(var(--secondary));
    --widget-accent-color: hsl(var(--accent));

    --button-bg-color: hsl(var(--primary));
    --button-text-color: hsl(var(--primary-foreground));
    --input-bg-color: hsl(var(--input));
    --input-text-color: hsl(var(--foreground));
    --card-bg-color: hsl(var(--card));
    --card-text-color: hsl(var(--card-foreground));

    /* Animated background specific colors for Dark Theme - INCREASED OPACITY */
    --blob-color-1: hsla(var(--primary), 0.7);
    --blob-color-2: hsla(var(--accent), 0.65);
    --blob-color-3: hsla(180, 70%, 60%, 0.65);
    --particle-color: hsla(var(--foreground), 0.5);
  }
}

@layer base {
  * {
    @apply border-border;
  }
  html {
    @apply bg-background;
  }
  body {
    @apply text-foreground;
    cursor: default;
  }


  /* Specific cursors for interactive elements */
  button,
  a,
  select,
  label[for],
  [role="button"],
  [role="link"],
  input[type="button"],
  input[type="submit"],
  input[type="reset"],
  input[type="checkbox"],
  input[type="radio"] {
    cursor: pointer;
  }

  /* Text selection cursor for text inputs */
  input[type="text"],
  input[type="email"],
  input[type="number"],
  input[type="password"],
  input[type="search"],
  input[type="tel"],
  input[type="url"],
  input[type="date"],
  input[type="month"],
  input[type="week"],
  input[type="time"],
  input[type="datetime-local"],
  textarea {
    cursor: text;
  }
}

/* Animated Background Blobs */
.animated-bg-container {
  /* Container itself does not need a background if blobs cover it */
}

.blob-1, .blob-2, .blob-3 {
  @apply absolute rounded-full filter blur-3xl;
  will-change: transform, opacity;
}

.blob-1 {
  width: 35vw;
  height: 35vw;
  min-width: 300px;
  min-height: 300px;
  max-width: 500px;
  max-height: 500px;
  left: 10%;
  top: 10%;
  background-color: var(--blob-color-1);
  animation: float-blob-1 25s infinite ease-in-out alternate;
}

.blob-2 {
  width: 30vw;
  height: 30vw;
  min-width: 250px;
  min-height: 250px;
  max-width: 450px;
  max-height: 450px;
  right: 5%;
  top: 30%;
  background-color: var(--blob-color-2);
  animation: float-blob-2 30s infinite ease-in-out alternate;
  animation-delay: -5s;
}

.blob-3 {
  width: 40vw;
  height: 40vw;
  min-width: 350px;
  min-height: 350px;
  max-width: 550px;
  max-height: 550px;
  left: 25%;
  bottom: 5%;
  background-color: var(--blob-color-3);
  animation: float-blob-3 20s infinite ease-in-out alternate;
  animation-delay: -10s;
}

@keyframes float-blob-1 {
  0% { transform: translate(0, 0) scale(1); opacity: 0.9; }
  50% { transform: translate(20vw, 15vh) scale(1.2); opacity: 1; }
  100% { transform: translate(0, 0) scale(1); opacity: 0.9; }
}

@keyframes float-blob-2 {
  0% { transform: translate(0, 0) scale(1); opacity: 0.85; }
  50% { transform: translate(-15vw, -10vh) scale(1.1); opacity: 1; }
  100% { transform: translate(0, 0) scale(1); opacity: 0.85; }
}

@keyframes float-blob-3 {
  0% { transform: translate(0, 0) scale(1.1) rotate(0deg); opacity: 1; }
  50% { transform: translate(-10vw, 10vh) scale(0.9) rotate(15deg); opacity: 0.8; }
  100% { transform: translate(0, 0) scale(1.1) rotate(0deg); opacity: 1; }
}

/* Animated Particles */
.particle-container {
  @apply absolute inset-0 overflow-hidden;
}

.particle {
  @apply absolute rounded-full;
  background-color: var(--particle-color);
  animation-name: drift-particle;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  opacity: 0;
  will-change: transform, opacity;
}

@keyframes drift-particle {
  0% {
    transform: translateY(10vh) translateX(0);
    opacity: 0;
  }
  20% {
    opacity: 1;
  }
  80% {
    opacity: 1;
  }
  100% {
    transform: translateY(-110vh) translateX(calc(var(--random-x-drift, 0) * 20vw - 10vw));
    opacity: 0;
  }
}
